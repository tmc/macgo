name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  GO_VERSION: '1.24'
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  lint:
    name: Lint
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Check Go formatting
        run: |
          if [ -n "$(gofmt -s -l .)" ]; then
            echo "The following files need formatting:"
            gofmt -s -l .
            exit 1
          fi
      
      - name: Run go vet
        run: go vet ./...
      
      - name: Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest
      
      - name: Run staticcheck
        run: staticcheck ./...
      
      - name: Install golint
        run: go install golang.org/x/lint/golint@latest
      
      - name: Run golint
        run: golint -set_exit_status ./...

  test:
    name: Test
    strategy:
      matrix:
        os: [macos-13, macos-14]
        go: ['1.22', '1.23', '1.24']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}
      
      - name: Get dependencies
        run: |
          go mod download
          go mod verify
      
      - name: Run unit tests
        run: |
          go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
        env:
          CGO_ENABLED: 1
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.txt
          flags: unittests
          name: codecov-${{ matrix.os }}-go${{ matrix.go }}
          fail_ci_if_error: false

  integration-test:
    name: Integration Tests
    strategy:
      matrix:
        os: [macos-13, macos-14]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Run integration tests
        run: |
          # Run macOS-specific integration tests
          go test -v -tags=integration ./...
        env:
          CGO_ENABLED: 1
          MACGO_TEST_INTEGRATION: 1
      
      - name: Test signal handling
        run: |
          # Run comprehensive signal tests
          go test -v -run "TestSignal|TestImproved" ./...
        timeout-minutes: 10
      
      - name: Test bundle creation
        run: |
          # Run bundle-specific tests
          go test -v -run "TestBundle|TestCreateBundle" ./...
        timeout-minutes: 10

  example-verification:
    name: Verify Examples
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Build all examples
        run: |
          for example in examples/*/main.go; do
            echo "Building $example"
            go build -o /tmp/example-binary "$example"
          done
      
      - name: Test minimal example
        run: |
          go run examples/minimal/main.go &
          PID=$!
          sleep 2
          kill $PID || true
          wait $PID || true
      
      - name: Test simple example
        run: |
          go run examples/simple/main.go &
          PID=$!
          sleep 2
          kill $PID || true
          wait $PID || true

  security-scan:
    name: Security Scan
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Run gosec
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          gosec -fmt sarif -out gosec-results.sarif ./... || true
      
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: gosec-results.sarif
      
      - name: Run go mod audit
        run: |
          go list -json -deps ./... | \
          go run golang.org/x/vuln/cmd/govulncheck@latest -json -

  benchmark:
    name: Benchmarks
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Run benchmarks
        run: |
          go test -bench=. -benchmem -run=^$ ./... | tee benchmark-results.txt
      
      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: benchmark-results.txt

  build-artifacts:
    name: Build Artifacts
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Build macgo-debug
        run: |
          go build -o macgo-debug ./cmd/macgo-debug
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macgo-debug
          path: macgo-debug