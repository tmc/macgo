name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true

jobs:
  release:
    name: Create Release
    runs-on: macos-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      
      - name: Validate version
        run: |
          VERSION="${{ github.event.inputs.version || github.ref_name }}"
          if ! [[ "$VERSION" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
            echo "Invalid version format: $VERSION"
            exit 1
          fi
      
      - name: Run tests
        run: |
          go test -v -race ./...
      
      - name: Build release artifacts
        run: |
          VERSION="${{ github.event.inputs.version || github.ref_name }}"
          
          # Build for multiple architectures
          GOOS=darwin GOARCH=amd64 go build -o macgo-debug-darwin-amd64 ./cmd/macgo-debug
          GOOS=darwin GOARCH=arm64 go build -o macgo-debug-darwin-arm64 ./cmd/macgo-debug
          
          # Create universal binary
          lipo -create -output macgo-debug-universal \
            macgo-debug-darwin-amd64 \
            macgo-debug-darwin-arm64
          
          # Create archives
          tar -czf macgo-debug-${VERSION}-darwin-amd64.tar.gz macgo-debug-darwin-amd64
          tar -czf macgo-debug-${VERSION}-darwin-arm64.tar.gz macgo-debug-darwin-arm64
          tar -czf macgo-debug-${VERSION}-darwin-universal.tar.gz macgo-debug-universal
      
      - name: Generate changelog
        id: changelog
        run: |
          VERSION="${{ github.event.inputs.version || github.ref_name }}"
          PREV_TAG=$(git describe --tags --abbrev=0 $VERSION^ 2>/dev/null || echo "")
          
          if [ -z "$PREV_TAG" ]; then
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            echo "Initial release" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
            git log --pretty=format:"- %s" ${PREV_TAG}..${VERSION} >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi
      
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.version || github.ref_name }}
          name: ${{ github.event.inputs.version || github.ref_name }}
          body: |
            ## What's Changed
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ## Installation
            
            ### Using go install
            ```bash
            go install github.com/tmc/misc/macgo@${{ github.event.inputs.version || github.ref_name }}
            ```
            
            ### Download Binary
            Download the appropriate binary for your architecture from the assets below.
            
            ## Checksums
            ```
            sha256sum macgo-debug-*.tar.gz
            ```
          files: |
            macgo-debug-*.tar.gz
          draft: false
          prerelease: ${{ contains(github.event.inputs.version || github.ref_name, '-') }}

  publish-docs:
    name: Publish Documentation
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      
      - name: Generate Go docs
        run: |
          go install golang.org/x/pkgsite/cmd/pkgsite@latest
          pkgsite -http=:8080 &
          SERVER_PID=$!
          sleep 5
          
          # Generate documentation
          mkdir -p docs/api
          curl -s http://localhost:8080/github.com/tmc/misc/macgo > docs/api/index.html
          
          kill $SERVER_PID